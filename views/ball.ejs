<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SocketIO Demo</title>
    <script src="https://cdn.bootcss.com/socket.io/2.3.0/socket.io.js"></script>
</head>

<body>
    <h1>Hello Ball</h1>

    <script>
        var ROOM_ID = 'room001';
        var DEVICE_SN = 'devcie000' + Math.round(Math.random() * 50000);
        var timer; // 模拟循环任务句柄
        var heartBeatTimer; // 模拟心跳任务句柄
        var clients = []; // 搜集当前有几个客户端在线

        var socket = io('http://localhost:3000');
        socket.on('connect', function () {
            console.log('ball connected', socket.id);
            socket.emit('ball_enter', { 'roomID': ROOM_ID, 'deviceSN': DEVICE_SN });
        });
        socket.on('disconnect', function () {
            console.log('ball disconnected');
            clearAll();
        });
        // socket.on('ball_enter', function (data) {
        //     console.log('ball_enter', data, 'clients: ', clients);
        //     if (data.roomID === ROOM_ID && clients.length > 0) {
        //         sendData();
        //         // sendHeartBeat();
        //     }
        // });

        socket.on('client_enter', function (data) {
            if (data.roomID == ROOM_ID) {
                var index = clients.indexOf(data.socketID);
                if (index === -1) {
                    clients.push(data.socketID);
                    // 防止页面多开，导致死循环
                    socket.emit('ball_enter', { 'roomID': ROOM_ID, 'deviceSN': DEVICE_SN });
                }
                if (clients.length === 1) { // 只有在从0～1时，才开始发送实时数据
                    sendData();
                    // sendHeartBeat();
                }
            }
            console.log('client_enter', clients);
        });
        
        socket.on('member_leave', function (roomId) {
            console.log('member_leave');
            var index = clients.indexOf(roomId);
            if (index !== -1) {
                clients.splice(index, 1);
            }
            console.log('client left counts:', clients);
            if (clients.length === 0) {
                clearAll();
            }
        });

        function sendData() {
            if (timer !== undefined) return;
            clearInterval(timer);
            timer = setInterval(function () {
                var payload = {
                    api: 100,
                    deviceSN: DEVICE_SN,
                    spo2: [0, 1, 2, 3, 4, 5, 6, 7],
                    pr: [68, 70, 100],
                    time: new Date(),
                    roomID: ROOM_ID,
                };
                console.log(payload);

                socket.emit('BALL_AHI_UPDATE', payload);
            }, 2000);
        }

        // function sendHeartBeat() {
        //     if (heartBeatTimer !== undefined) return;
        //     clearInterval(heartBeatTimer);
        //     heartBeatTimer = setInterval(function () {
        //         socket.emit('heart_beat', { roomID: ROOM_ID, deviceSN: DEVICE_SN });
        //     }, 10 * 1000); // 5s 心跳
        // }

        function clearAll() {
            clearInterval(timer);
            clearInterval(heartBeatTimer);
            timer = undefined;
            heartBeatTimer = undefined;
        }
    </script>
</body>

</html>