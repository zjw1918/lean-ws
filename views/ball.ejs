<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SocketIO Demo</title>
    <script src="https://cdn.bootcss.com/socket.io/2.3.0/socket.io.js"></script>
</head>

<body>
    <h1>Hello Ball</h1>

    <script>
        var socket = io('http://localhost:3000');

        var ROOM_ID = 'room001';
        var timer; // 模拟循环任务句柄
        var clientCounts = 0; // 当前聊天室成员（机构客户端页面）在线人数

        socket.on('connect', function () {
            console.log('ball connected');
            socket.emit('ball_enter', { 'chatRoomId': ROOM_ID });
        });
        socket.on('disconnect', function () {
            console.log('ball disconnected');
            clearAll();
        });
        socket.on('ball_enter', function (data) {
            console.log('ball_enter', data, 'client counts: ', clientCounts);
            if (data.chatRoomId === ROOM_ID && clientCounts > 0) {
                sendData();
            }
        });

        socket.on('client_enter', function (data) {
            if (data.chatRoomId == ROOM_ID) {
                clientCounts++;
                sendData();
            }
            console.log('client_enter', clientCounts);
        });
        // socket.on('client_leave', function (data) {
        //     console.log('client_leave', data, ROOM_ID);
        //     console.log(ROOM_ID in data);
        //     if (data.indexOf(ROOM_ID)) {
        //         clientCounts--;
        //         console.log('client left counts:', clientCounts);
        //         if (clientCounts === 0) {
        //             clearAll();
        //         }
        //     }
        // });
        socket.on('client_leave', function () {
            console.log('client_leave');
            clientCounts--;
            console.log('client left counts:', clientCounts);
            if (clientCounts === 0) {
                clearAll();
            }
        });

        function sendData() {
            if (timer !== undefined) return;
            clearInterval(timer);
            timer = setInterval(function () {
                var payload = {
                    api: 100,
                    deviceSN: 's00001',
                    spo2: [0, 1, 2, 3, 4, 5, 6, 7],
                    pr: [68, 70, 100],
                    time: new Date(),
                    chatRoomId: ROOM_ID,
                };
                console.log(payload);

                socket.emit('BALL_AHI_UPDATE', payload);
            }, 2000);
        }

        function clearAll() {
            clearInterval(timer);
            timer = undefined;
            clientCounts = 0;
        }
    </script>
</body>

</html>